<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>The Lake of Reflection</title>
	<script src="http://www.html5canvastutorials.com/libraries/kinetic-v3.10.0.js"></script>
	<style type="text/css">
	</style>
</head>
<body>
	<!-- The HTML -->
	<div id="screen"></div>


	<script type="text/javascript">

	// ----- Preparation -----

	// Background
	var main = new Kinetic.Layer();

	// Drawing
	var stage = new Kinetic.Stage({
		container: "screen",
		width: 800,
		height: 600
	});

	// Animation
	var goalX = -1;
	var goalY = -1;
	var animating = false;

	// ----- Drawing the screen -----

	var bg = new Image();
	bg.src = "bg.png";
	bg.onload = function() {
		var bgimg = new Kinetic.Image({
			x: 0, y: 0,
			image: bg,
			width: stage.getWidth(), height: stage.getHeight()
		})
		bgimg.on("click", objClick);
		main.add(bgimg);

		// Players
		scheduleSprite(main, 150, 220, "pl", "sprite.png")
		main.hide();
		stage.add(main);

	} // Background loaded

	// Once *everything* is loaded:
	window.onload = function()
	{
		setTimeout("checkLoaded()", 200);
	}
	function checkLoaded()
	{
		if (player() === undefined)
		{
			// Keep checking until this condition is met
			setTimeout("checkLoaded()", 100);
		}
		else
		{
			stage.onFrame(doAnimations);
			main.show();
			main.draw()
			stage.start();
		}
	}


	// ===== Functions =====
	// ----- Drawing -----
	function getContext(s)
	{
		return document.getElementById(s).getContext("2d");
	}
	function scheduleSprite(c, x, y, uid, src)
	{
        var animList = {	stand_F:	[	{ x: 0,		y: 0,		width: 50,	height: 100 },
        									{ x: 0,		y: 0,		width: 50,	height: 100 }		],
        					stand_L:	[	{ x: 50,	y: 0,		width: 50,	height: 100 }		],
        					stand_B:	[	{ x: 100,	y: 0,		width: 50,	height: 100 }		],
        					walk_F:		[	{ x: 0,		y: 50,		width: 50,	height: 100 },
        									{ x: 50,	y: 50,		width: 50,	height: 100 },
        									{ x: 100,	y: 50,		width: 50,	height: 100 },
        									{ x: 150,	y: 50,		width: 50,	height: 100 },
        									{ x: 200,	y: 50,		width: 50,	height: 100 },
        									{ x: 250,	y: 50,		width: 50,	height: 100 },
        									{ x: 300,	y: 50,		width: 50,	height: 100 },
        									{ x: 350,	y: 50,		width: 50,	height: 100 }		],
        					walk_L:		[	{ x: 0,		y: 100,		width: 50,	height: 100 },
        									{ x: 50,	y: 100,		width: 50,	height: 100 },
        									{ x: 100,	y: 100,		width: 50,	height: 100 },
        									{ x: 150,	y: 100,		width: 50,	height: 100 },
        									{ x: 200,	y: 100,		width: 50,	height: 100 },
        									{ x: 250,	y: 100,		width: 50,	height: 100 },
        									{ x: 300,	y: 100,		width: 50,	height: 100 },
        									{ x: 350,	y: 100,		width: 50,	height: 100 }		],
        					walk_B:		[	{ x: 0,		y: 150,		width: 50,	height: 100 },
        									{ x: 50,	y: 150,		width: 50,	height: 100 },
        									{ x: 100,	y: 150,		width: 50,	height: 100 },
        									{ x: 150,	y: 150,		width: 50,	height: 100 },
        									{ x: 200,	y: 150,		width: 50,	height: 100 },
        									{ x: 250,	y: 150,		width: 50,	height: 100 },
        									{ x: 300,	y: 150,		width: 50,	height: 100 },
        									{ x: 350,	y: 150,		width: 50,	height: 100 }		]	};

		var img = new Image();
		img.onload = function() {
			var image = new Kinetic.Sprite({
				x: x, y: y,
				id: uid,
				animation: 'stand_F', animations: animList, frameRate: 7,
				image: img
			})
			c.add(image);
			image.start()
			c.draw()
		}
		img.src = src;
	}
	function doAnimations(frame)
	{
		if (goalX > 0 && goalY > 0)
		{
			animating = true;
			player().setAnimation('walk_L')
			var currPos = getPlayerPos(player());
			diffX = (goalX - currPos[0]);
			diffY = (goalY - currPos[1]);
			dirX = (diffX > 0 ? 1 : -1);
			dirY = (diffY > 0 ? 1 : -1);
			diffX = Math.abs(diffX);
			diffY = Math.abs(diffY);
			// If we have less than 10 pixels to go, then don't go the whole way
			moveX = 5;		if (diffX < moveX) moveX = diffX;
			moveY = 5;		if (diffY < moveY) moveY = diffY;
			setPlayerPos(player(), currPos[0] + moveX * dirX, currPos[1] + moveY * dirY)

			// Are we done?
			if (goalX == currPos[0] && goalY == currPos[1])
			{
				goalX = -1; goalY = -1;
				player().setAnimation('stand_F')
				animating = false;
			}
			main.draw();
		}
	}
	function getW(obj)
	{
		if (obj.shapeType == "Image")	return obj.getWidth();
		else 							return 50;
	}
	function getH(obj)
	{
		if (obj.shapeType == "Image")	return obj.getHeight();
		else							return 100;
	}
	// ----- Interaction -----
	function getCursor(e)
	{
		// Thanks to http://diveintohtml5.info/canvas.html
		var x;
		var y;
		if (e.pageX != undefined && e.pageY != undefined) {
			x = e.pageX;
			y = e.pageY;
		}
		else {
			x = e.clientX + document.body.scrollLeft +
				document.documentElement.scrollLeft;
			y = e.clientY + document.body.scrollTop +
				document.documentElement.scrollTop;
		}
		x -= stage.attrs.container.offsetLeft;
		y -= stage.attrs.container.offsetTop;
		return [x, y];
	}
	function player()
	{
		return main.get("#pl")[0];
	}
	function objClick(e)
	{
		walkTo(e)
	}
	function walkTo(e)
	{
		goalX = getCursor(e)[0];
		goalY = getCursor(e)[1];
	}
	function getPlayerPos(pl)
	{
		return [pl.getX() + getW(pl) / 2,
			pl.getY() + getH(pl)];
	}
	function setPlayerPos(pl, x, y)
	{
		// Bottom centre
		pl.setX(x - getW(pl) / 2);
		pl.setY(y - getH(pl));
		main.draw();
	}
	</script>
</body>
</html>